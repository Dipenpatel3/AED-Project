/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInferface;

import MainModel.Course;
import MainModel.CourseHistory;
import MainModel.StudentClass;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel; 
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author dhrruv
 */

public class AddCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddCourseJPanel
     */
//    public AddCourseJPanel() {
//        initComponents();
//    }
    private JPanel WorkArea;
    private CourseHistory courseHistory;
    private StudentClass StudentClass;
    
    AddCourseJPanel(JPanel WorkArea, CourseHistory courseHistory,StudentClass StudentClass) {
       initComponents();
       this.WorkArea=WorkArea;
       this.courseHistory=courseHistory;
       this.StudentClass=StudentClass;
       
//       tableModel = (DefaultTableModel) jTable1.getModel();
       //populateTable();

    }

//    AddCourseJPanel(JPanel WorkArea) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnViewCourse = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnaddCourse = new javax.swing.JButton();

        setBackground(new java.awt.Color(186, 79, 84));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add course ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Term ", "Professor Name", "Schedule"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSearch.setText("Search ");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnViewCourse.setText("View Course");
        btnViewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCourseActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnaddCourse.setText("Add course ");
        btnaddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnaddCourse)
                    .addComponent(btnReset)
                    .addComponent(btnViewCourse)
                    .addComponent(btnBack)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSearch)
                        .addGap(30, 30, 30)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnViewCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnaddCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String term = txtSearch.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dtm);
        jTable1.setRowSorter(sorter);
        RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter(term, 1); 
        sorter.setRowFilter(rowFilter);
       
        for(Course course: courseHistory.getCourseHistory()){
            String fullname=course.getProfessor();
//            System.out.println("This is my name");
//            System.out.println(fullname);
            Course result=courseHistory.searchCourse(term,fullname);
            System.out.println("The term is:");
            System.out.println(course.getTerm());
            //System.out.println(result.getTerm());
            if(result==null){
                JOptionPane.showMessageDialog(null, "Term doesn't exist!!");
                dtm.setRowCount(0);
            }
            else{
                populateTable();   
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCourseActionPerformed
        // TODO add your handling code here:
        ViewaddcourseStudentJPanel viewadcoursestudentjpanel=new ViewaddcourseStudentJPanel(WorkArea,StudentClass);
        WorkArea.add("ViewaddcourseStudentJPanel",viewadcoursestudentjpanel);
        CardLayout layout=(CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
        System.out.println(StudentClass.getAddcourses());
    }//GEN-LAST:event_btnViewCourseActionPerformed

    private void btnaddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddCourseActionPerformed
        // TODO add your handling code here:
        int SelectRow=jTable1.getSelectedRow();
        if(SelectRow<0){
            JOptionPane.showMessageDialog(null,"Please select the Row from the table");
        }
        else{
            for(int col=0;col<jTable1.getColumnCount();col++){
                Object cellvalue=jTable1.getValueAt(SelectRow, col);
                //StudentClass studentClass=new StudentClass();
                StudentClass.addcourse((String) cellvalue);
            }
//            String courseName=(String)jTable1.getValueAt(SelectRow,0);
//            System.out.println(courseName);
            
        }
    }//GEN-LAST:event_btnaddCourseActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtSearch.setText(""); // Clear the search input
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dtm);
        jTable1.setRowSorter(sorter);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        WorkArea.remove(this);
        CardLayout layout=(CardLayout) WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewCourse;
    private javax.swing.JButton btnaddCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        for (Course course : courseHistory.getCourseHistory()) {
            Object[] row = new Object[4];
            row[0] = course.getCourseName();
            row[1] =course.getTerm();
            row[2] =course.getProfessor();                    
            row[3] = course.getTime();
            dtm.addRow(row);
        }
    }
}
