/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInferface;

import MainModel.StudentClass;
import MainModel.StudentDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author dhrruv
 */
public class DepartmentLoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DepartmentLoginJPanel
     */
//    public DepartmentLoginJPanel() {
//        initComponents();
//    }
    private JPanel WorkArea;
    private StudentDirectory StudentDirectory;
    
    DepartmentLoginJPanel(JPanel WorkArea,StudentDirectory StudentDirectory) {
     initComponents();
     this.WorkArea=WorkArea;
     this.StudentDirectory=StudentDirectory;
     populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGenerateTranscipt = new javax.swing.JButton();

        setBackground(new java.awt.Color(186, 79, 84));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Department Login");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "NEU ID", "Transcript"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        btnGenerateTranscipt.setText("Generate Transcript ");
        btnGenerateTranscipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateTransciptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLogout)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGenerateTranscipt)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(108, 108, 108))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnGenerateTranscipt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        int dialogButton=JOptionPane.YES_NO_OPTION;
        int dialogResult=JOptionPane.showConfirmDialog(null,"Would you Like to Logout","Warring",dialogButton);
        if(dialogResult==JOptionPane.YES_NO_OPTION){
            WorkArea.remove(this);
            CardLayout layout=(CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        }
        else{
            
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnGenerateTransciptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateTransciptActionPerformed
        // TODO add your handling code here:
        int selectrow=jTable1.getSelectedRow();
        if(selectrow<0){
            JOptionPane.showMessageDialog(null,"Please Select the Studen for Transcript generate");
        }
        else{
            //StudentClass StudentClass=(StudentClass) jTable1.getValueAt(selectrow, 0);
            JOptionPane.showMessageDialog(null,"Transcript is generated");
            //populateUpdateTable();
        }
    }//GEN-LAST:event_btnGenerateTransciptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateTranscipt;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
      
          DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
          dtm.setRowCount(0);
          for(StudentClass StudentClass:StudentDirectory.getStudentList())
          {
              if(StudentClass.getGenerateTrans()==1){
                  String generateTrans="No";
                  int CheckTrans=1;
                  StudentClass.setCheckTran123s(CheckTrans);
                  StudentClass.setCheckTrans(generateTrans);
                  Object[] row=new Object[5];
                  row[0]=StudentClass.getFirstName();
                  row[1]=StudentClass.getLastName();
                  row[2]=StudentClass.getNEUID();
                  row[3]=generateTrans;
                  dtm.addRow(row);
              }
              else{
                  dtm.setRowCount(0);
              }
              
        }
      
}

//    private void populateUpdateTable() {
//       DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
//          dtm.setRowCount(0);
//          for(StudentClass StudentClass:StudentDirectory.getStudentList())
//          {
//              if(StudentClass.getGenerateTrans()==1){
//                  String generateTrans="Yes";
//                  int CheckTrans=1;
//                  StudentClass.setCheckTran123s(CheckTrans);
//                  StudentClass.setCheckTrans(generateTrans);
//                  Object[] row=new Object[5];
//              row[0]=StudentClass.getFirstName();
//              row[1]=StudentClass.getLastName();
//              row[2]=StudentClass.getNEUID();
//              row[3]=generateTrans;
//              dtm.addRow(row);
//              }
//              else{
//                  dtm.setRowCount(0);
//              }
              
    }

